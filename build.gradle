buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://repo.spring.io/snapshot' }
        maven { url 'http://repo.spring.io/milestone' }
    }

    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.0.0.M6'
    }
}

apply plugin: 'war'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'project-report'
apply plugin: 'build-dashboard'
apply plugin: 'org.springframework.boot'
apply plugin: "io.spring.dependency-management"

group = 'bookproject'
version = '0.0.1'

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

description = """the book project"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.warnings = true
    options.compilerArgs = ['-Xlint']
}

springBoot {
    mainClassName = 'bookproject.Application'
}

war {
    enabled = true
    archiveName 'scraper.war'
}

test {
    ignoreFailures = true
}

bootRun {
    jvmArgs = ["-agentlib:jdwp=transport=dt_socket,server=y,address=8000,suspend=n"]
}


bootWar {
    classifier = 'boot'
    excludeDevtools = false
}


task all(dependsOn: [build, javadoc, projectReport, jacocoTestReport]) {
    doLast {
        println 'allReports task finished'
    }
}

checkstyle {
    toolVersion = "8.4"
}

pmd {
    toolVersion = "5.8.1"
}

findbugs {
    toolVersion = "3.0.1"
    effort = "max"
    reportLevel = "low"
    ignoreFailures = true
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

jacoco {
    toolVersion = "0.7.9"
}

test.jacoco.excludes = ['com/steadystate/**']

configurations {
    providedRuntime
}

dependencies {
    compile 'net.sf.jtidy:jtidy:r938'
    compile 'commons-validator:commons-validator:1.6'
    compile 'net.sourceforge.htmlunit:htmlunit:2.28'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-aop'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-cache'

    compileOnly 'org.projectlombok:lombok'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.8.0'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.7.22'
    testCompile group: 'org.apache.commons', name: 'commons-text', version: '1.1'
    testCompile 'org.springframework.boot:spring-boot-starter-test'

    runtime 'org.springframework.boot:spring-boot-devtools'

    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
}
